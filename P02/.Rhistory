countFigNum = 1
#### EXP1 ####
data=fromJSON(file="../[Python]PreProcessing/Exp1/data/data_blink2.json")
ind_data = data.frame(
sub = data$sub,
responses = data$numOfSwitch,
data_y = data$numOfBlink
)
ind_data[ind_data$responses > 1,]$responses = 2
# ind_data = rejectOutlier(ind_data,'data_y')
ind_data$data_y = unlist(tapply(ind_data$data_y,list(ind_data$sub),scale))
data_e1 = aggregate( data_y ~ sub*responses, data = ind_data, FUN = "mean")
config = list(alpha = 0.4,
stride = 0.1,
label_x = "# of switch",
label_y = "# of blinks [z-scored]",
title = "",
grCol = c("#F8766D","#00BA38","#619CFF")
)
g1 = c('0','1','2+')
data_e1$responses = g1[data_e1$responses+1]
anovakun(data_e1,"sA",long=T, peta=T)
p = dispLineGraph(data_e1,config,c("responses"))
p <- drawSignificance(p,makeSigPair(forDrawingPost),0.22,0.03,TRUE)
config$ylim = round(seq(-0.2,0.3,0.1),4)
config$ylim_stride = 0.05
config$xlim = round(seq(1,3,1),2)
config$xlim_stride = 0.5
p = setEmptyStyle(p,config)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
#### EXP2 ####
data=fromJSON(file="../[Python]PreProcessing/Exp2/data/data_blink2.json")
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
data_y = data$numOfBlink
)
# ind_data = rejectOutlier(ind_data,'data_y')
ind_data$data_y = unlist(tapply(ind_data$data_y,list(ind_data$sub),scale))
data_e2 = aggregate( data_y ~ sub*responses, data = ind_data, FUN = "mean")
g1 = c('no switch','switch')
config$label_x = ''
data_e2$responses = g1[data_e2$responses+1]
anovakun(data_e2,"sA",long=T, peta=T)
p = dispLineGraph(data_e2,config,c("responses"))
p <- drawSignificance(p,t(rbind(g1[1], '>' , g1[2],anovatab[2,"p.col"])),0.21,0.03,TRUE)
config$ylim = round(seq(-0.2,0.3,0.1),4)
config$ylim_stride = 0.05
config$xlim = round(seq(1,2,1),2)
config$xlim_stride = 0.5
p = setEmptyStyle(p,config)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
p1
p2
p = dispLineGraph(data_e1,config,c("responses"))
p <- drawSignificance(p,makeSigPair(forDrawingPost),0.22,0.03,TRUE)
config$ylim = round(seq(-0.3,0.3,0.1),4)
config$ylim_stride = 0.05
config$xlim = round(seq(1,3,1),2)
config$xlim_stride = 0.5
p = setEmptyStyle(p,config)
p
countFigNum=1
data=fromJSON(file="/Users/yutasuzuki/Desktop/Python/Pxx_auditoryIllusion/e4_streamChange/data/data_blinks2.json")
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
Session = data$SessionNum,
numOfTrial = data$numOfTrial
)
View(ind_data)
countFigNum=1
data=fromJSON(file="/Users/yutasuzuki/Desktop/Python/Pxx_auditoryIllusion/e4_streamChange/data/data_blinks2.json")
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
Session = data$SessionNum,
numOfTrial = data$numOfTrial
)
d = NULL
for(iSub in unique(ind_data$sub)){
for(iSession in unique(ind_data$Session)){
d = rbind(d,dim(ind_data[ind_data$sub == iSub & ind_data$Session == iSession,])[1])
}
}
data_blink_sum = aggregate( . ~ Session*sub, data = ind_data, FUN = "sum")
data_blink_sum$numOfSwitch = d
data_blink_sum$sub = subName[data_blink_sum$sub]
data_blink_sum$data_y = data$numOfBlinks
data_blink_sum$age = data$age
View(data_blink_sum)
model = lmer( data_y ~ numOfSwitch * age + (1+numOfSwitch|sub),data_blink_sum)
summary(model)
model = lmer( data_y ~ numOfSwitch  + (1+numOfSwitch|sub),data_blink_sum)
summary(model)
data=fromJSON(file="/Users/yutasuzuki/Desktop/Python/Pxx_auditoryIllusion/e4_streamChange/data/data_blinks2.json")
View(data)
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
Session = data$SessionNum,
numOfTrial = data$numOfTrial
)
View(ind_data)
data=fromJSON(file="../[Python]PreProcessing/Exp3/data/data_blink2.json")
data=fromJSON(file="../[Python]PreProcessing/Exp3/data/data_blink2.json")
View(data)
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
Session = data$SessionNum,
numOfTrial = data$numOfTrial,
pupil = data$Baseline
)
View(ind_data)
d = NULL
for(iSub in unique(ind_data$sub)){
for(iSession in unique(ind_data$Session)){
d = rbind(d,dim(ind_data[ind_data$sub == iSub & ind_data$Session == iSession,])[1])
}
}
data_blink_sum = aggregate( . ~ Session*sub, data = ind_data, FUN = "sum")
data_blink_sum$numOfSwitch = d
data_blink_sum$sub = subName[data_blink_sum$sub]
data_blink_sum$data_y = data$numOfBlinks
data_blink_sum$age = data$age
View(data_blink_sum)
g1 = c('Session1','Session2','Session3','Session4')
data_blink_sum$Session = g1[data_blink_sum$Session+1]
model = lmer( data_y ~ numOfSwitch * age + (1+numOfSwitch|sub),data_blink_sum)
View(data_blink_sum)
d = NULL
for(iSub in unique(ind_data$sub)){
for(iSession in unique(ind_data$Session)){
d = rbind(d,dim(ind_data[ind_data$sub == iSub & ind_data$Session == iSession,])[1])
}
}
data_blink_sum = aggregate( . ~ Session*sub, data = ind_data, FUN = "sum")
data_blink_sum$numOfSwitch = d
data_blink_sum$sub = subName[data_blink_sum$sub]
data_blink_sum$data_y = data$numOfBlinks
data_blink_sum$age = data$age
g1 = c('Session1','Session2','Session3','Session4')
data_blink_sum$Session = g1[data_blink_sum$Session+1]
model = lmer( data_y ~ numOfSwitch * age + (1+numOfSwitch|sub),data_blink_sum)
View(data_blink_sum)
data_blink_sum = aggregate( . ~ Session*sub, data = ind_data, FUN = "sum")
data_blink_sum$numOfSwitch = d
data_blink_sum$sub = subName[data_blink_sum$sub]
data_blink_sum$data_y = data$numOfBlinks
data_blink_sum$age = data$age
data$age
View(data)
data=fromJSON(file="../[Python]PreProcessing/Exp3/data/data_blink2.json")
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
Session = data$SessionNum,
numOfTrial = data$numOfTrial,
pupil = data$Baseline
)
d = NULL
for(iSub in unique(ind_data$sub)){
for(iSession in unique(ind_data$Session)){
d = rbind(d,dim(ind_data[ind_data$sub == iSub & ind_data$Session == iSession,])[1])
}
}
data_blink_sum = aggregate( . ~ Session*sub, data = ind_data, FUN = "sum")
data_blink_sum$numOfSwitch = d
data_blink_sum$sub = subName[data_blink_sum$sub]
data_blink_sum$data_y = data$numOfBlinks
data_blink_sum$age = data$age
g1 = c('Session1','Session2','Session3','Session4')
data_blink_sum$Session = g1[data_blink_sum$Session+1]
model = lmer( data_y ~ numOfSwitch * age + (1+numOfSwitch|sub),data_blink_sum)
View(data_blink_sum)
summary(model)
model = lmer( data_y ~ numOfSwitch * age * pupil + (1+numOfSwitch|sub),data_blink_sum)
summary(model)
View(data_blink_sum)
View(ind_data)
data=fromJSON(file="../[Python]PreProcessing/Exp3/data/data_blink2.json")
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
Session = data$SessionNum,
numOfTrial = data$numOfTrial,
pupil = data$Baseline
)
d = NULL
for(iSub in unique(ind_data$sub)){
for(iSession in unique(ind_data$Session)){
d = rbind(d,dim(ind_data[ind_data$sub == iSub & ind_data$Session == iSession,])[1])
}
}
View(ind_data)
data_blink_sum = aggregate( . ~ Session*sub, data = ind_data, FUN = "sum")
data_blink_mean = aggregate( . ~ Session*sub, data = ind_data, FUN = "mean")
View(data_blink_mean)
View(data_blink_sum)
data_blink_sum$numOfSwitch = d
data_blink_sum$sub = subName[data_blink_sum$sub]
data_blink_sum$data_y = data$numOfBlinks
data_blink_sum$age = data$age
data_blink_mean = aggregate( . ~ Session*sub, data = ind_data, FUN = "mean")
data_blink_sum$pupil = data_blink_mean$pupil
View(data_blink_sum)
g1 = c('Session1','Session2','Session3','Session4')
data_blink_sum$Session = g1[data_blink_sum$Session+1]
model = lmer( data_y ~ numOfSwitch * age * pupil + (1+numOfSwitch|sub),data_blink_sum)
summary(model)
model = lm( numOfSwitch ~ data_y * age * pupil,data_blink_sum)
summary(model)
model = lm( numOfSwitch ~ data_y * age * pupil,data_blink_sum)
summary(model)
View(data_blink_sum)
p=ggplot(data_blink_sum,aes(numOfSwitch,pupil))+
geom_point()
p
p=ggplot(data_blink_sum,aes(numOfSwitch,age))+
geom_point()
p
p=ggplot(data_blink_sum,aes(numOfSwitch,data_y))+
geom_point()
p
p=ggplot(data_blink_sum,aes(numOfSwitch,pupil))+
geom_point()
p
countFigNum=1
data=fromJSON(file="../[Python]PreProcessing/Exp3/data/data_blink2.json")
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
Session = data$SessionNum,
numOfTrial = data$numOfTrial,
pupil = data$Baseline
)
View(data)
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
Session = data$SessionNum,
# numOfTrial = data$numOfTrial,
pupil = data$Baseline
)
d = NULL
for(iSub in unique(ind_data$sub)){
for(iSession in unique(ind_data$Session)){
d = rbind(d,dim(ind_data[ind_data$sub == iSub & ind_data$Session == iSession,])[1])
}
}
data_blink_sum = aggregate( . ~ Session*sub, data = ind_data, FUN = "sum")
data_blink_sum$numOfSwitch = d
data_blink_sum$sub = subName[data_blink_sum$sub]
data_blink_sum$data_y = data$numOfBlinks
data_blink_sum$age = data$age
data_blink_mean = aggregate( . ~ Session*sub, data = ind_data, FUN = "mean")
data_blink_sum$pupil = data_blink_mean$pupil
g1 = c('Session1','Session2','Session3','Session4')
data_blink_sum$Session = g1[data_blink_sum$Session+1]
model = lmer( data_y ~ numOfSwitch * age + (1+numOfSwitch|sub),data_blink_sum)
summary(model)
model = lm( numOfSwitch ~ data_y * age * pupil,data_blink_sum)
summary(model)
p=ggplot(data_blink_sum,aes(numOfSwitch,pupil))+
geom_point()
p
p=ggplot(data_blink_sum,aes(numOfSwitch,data_y))+
geom_point()
p
p=ggplot(data_blink_sum,aes(pupil,data_y))+
geom_point()
p
model = lm( numOfSwitch ~ data_y * age * pupil,data_blink_sum)
summary(model)
model = lmer( data_y ~ numOfSwitch * age + (1+numOfSwitch|sub),data_blink_sum)
model
summary(model)
p=ggplot(data_blink_sum,aes(numOfSwitch,data_y))+
geom_point()
p
model = lmer( data_y ~ pupil + (1+pupil|sub),data_blink_sum)
summary(model)
model = lmer( numOfSwitch ~ pupil + (1+pupil|sub),data_blink_sum)
summary(model)
p=ggplot(data_blink_sum,aes(pupil,data_y))+
geom_point()
p
geom_point()
p=ggplot(data_blink_sum,aes(pupil,data_y,color=sub))+
geom_point()
p
p=ggplot(data_blink_sum,aes(pupil,data_y,color=sub))+
geom_point(aes(shape=Session))
p
p=ggplot(data_blink_sum,aes(pupil,data_y,color=sub))+
geom_point(aes(shape=Session),size=4)
p
p1=ggplot(data_blink_sum,aes(numOfSwitch,pupil,color=sub))+
geom_point(aes(shape=Session),size=4)
p2=ggplot(data_blink_sum,aes(numOfSwitch,data_y,color=sub))+
geom_point(aes(shape=Session),size=4)
p3=ggplot(data_blink_sum,aes(pupil,data_y,color=sub))+
geom_point(aes(shape=Session),size=4)
p1
p2
p3
p3
p1
model = lm( numOfSwitch ~ data_y * age * pupil, data_blink_sum)
summary(model)
model = lmer( numOfSwitch ~ data_y * age * pupil + (1+data_y+pupil+age|sub), data_blink_sum)
model = lmer( numOfSwitch ~ data_y * age * pupil + (1|sub), data_blink_sum)
summary(model)
countFigNum=1
data=fromJSON(file="../[Python]PreProcessing/Exp3/data/data_blink2.json")
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
Session = data$SessionNum,
# numOfTrial = data$numOfTrial,
pupil = data$Baseline
)
d = NULL
for(iSub in unique(ind_data$sub)){
for(iSession in unique(ind_data$Session)){
d = rbind(d,dim(ind_data[ind_data$sub == iSub & ind_data$Session == iSession,])[1])
}
}
data_blink_sum = aggregate( . ~ Session*sub, data = ind_data, FUN = "sum")
data_blink_sum$numOfSwitch = d
data_blink_sum$sub = subName[data_blink_sum$sub]
data_blink_sum$data_y = data$numOfBlinks
data_blink_sum$age = data$age
data_blink_mean = aggregate( . ~ Session*sub, data = ind_data, FUN = "mean")
data_blink_sum$pupil = data_blink_mean$pupil
g1 = c('Session1','Session2','Session3','Session4')
data_blink_sum$Session = g1[data_blink_sum$Session+1]
# model = lmer( data_y ~ numOfSwitch * age + (1+numOfSwitch|sub),data_blink_sum)
#
# model = lmer( numOfSwitch ~ pupil + (1+pupil|sub),data_blink_sum)
# summary(model)
#
model = lmer( numOfSwitch ~ data_y * age * pupil + (1|sub), data_blink_sum)
summary(model)
p=ggplot(data_blink_sum,aes(numOfSwitch,pupil,color=sub))+
geom_point(aes(shape=Session),size=4)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
p=ggplot(data_blink_sum,aes(numOfSwitch,data_y,color=sub))+
geom_point(aes(shape=Session),size=4)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
p=ggplot(data_blink_sum,aes(pupil,data_y,color=sub))+
geom_point(aes(shape=Session),size=4)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
gt=ranef(model)
data_corr = data.frame(
sub = unique(data_blink_sum$sub),
intercept = gt$sub$`(Intercept)` + summary(model)[["coefficients"]]['(Intercept)',1],
slope = gt$sub$numOfSwitch + summary(model)[["coefficients"]]['numOfSwitch',1]
)
model = lmer( data_y ~  numOfSwitch + (1+numOfSwitch|sub), data_blink_sum)
summary(model)
countFigNum=1
data=fromJSON(file="../[Python]PreProcessing/Exp3/data/data_blink2.json")
ind_data = data.frame(
sub = data$sub,
responses = data$responses,
Session = data$SessionNum,
# numOfTrial = data$numOfTrial,
pupil = data$Baseline
)
d = NULL
for(iSub in unique(ind_data$sub)){
for(iSession in unique(ind_data$Session)){
d = rbind(d,dim(ind_data[ind_data$sub == iSub & ind_data$Session == iSession,])[1])
}
}
data_blink_sum = aggregate( . ~ Session*sub, data = ind_data, FUN = "sum")
data_blink_sum$numOfSwitch = d
data_blink_sum$sub = subName[data_blink_sum$sub]
data_blink_sum$data_y = data$numOfBlinks
data_blink_sum$age = data$age
data_blink_mean = aggregate( . ~ Session*sub, data = ind_data, FUN = "mean")
data_blink_sum$pupil = data_blink_mean$pupil
g1 = c('Session1','Session2','Session3','Session4')
data_blink_sum$Session = g1[data_blink_sum$Session+1]
# p=ggplot(data_blink_sum,aes(numOfSwitch,pupil,color=sub))+
#   geom_point(aes(shape=Session),size=4)
# eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
# countFigNum = countFigNum+1
#
# p=ggplot(data_blink_sum,aes(numOfSwitch,data_y,color=sub))+
#   geom_point(aes(shape=Session),size=4)
# eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
# countFigNum = countFigNum+1
#
# p=ggplot(data_blink_sum,aes(pupil,data_y,color=sub))+
#   geom_point(aes(shape=Session),size=4)
# eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
# countFigNum = countFigNum+1
model = lmer( data_y ~  numOfSwitch + (1+numOfSwitch|sub), data_blink_sum)
summary(model)
gt=ranef(model)
data_corr = data.frame(
sub = unique(data_blink_sum$sub),
intercept = gt$sub$`(Intercept)` + summary(model)[["coefficients"]]['(Intercept)',1],
slope = gt$sub$numOfSwitch + summary(model)[["coefficients"]]['numOfSwitch',1]
)
# model = summary(model)
x = as.numeric(data_blink_sum$numOfSwitch)
y = data_blink_sum$data_y
f <- y ~  a*x + b
obj1 <- nls(f, start = c(a = 0, b = 0))
df <- data.frame(x = seq(0, 30, length = 30))
data_curve = data.frame(
x = df$x,
yy = predict(obj1, df)
)
print(summary(obj1))
r = cor.test(x,y)
p = ggplot(data_blink_sum,aes(x=numOfSwitch, y=data_y, color=sub))+
geom_point(aes(group = Session,shape=Session),size=5,alpha=0.8)+
geom_line(data = data_curve,aes(x=x,y=yy),color='gray')+
# facet_wrap(sub ~ .)+
# geom_abline(intercept = model[["coefficients"]]['(Intercept)',1],
#             slope =  model[["coefficients"]]['numOfSwitch',1] )+
# geom_abline(data= data_corr,aes(intercept = intercept,slope =  slope, color=sub))+
xlab("# of swtiches")+
ylab("# of blinks")
config = list()
config$ylim = round(seq(0,120,20),4)
config$ylim_stride = 5
config$xlim = round(seq(0,30,10),2)
config$xlim_stride = 2
p = setEmptyStyle(p,config)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
p = ggplot(data_blink_sum,aes(x=numOfSwitch, y=data_y, color=sub))+
geom_point(aes(group = Session,shape=Session),size=5,alpha=0.8)+
# geom_line(data = data_curve,aes(x=x,y=yy),color='gray')+
facet_wrap(sub ~ .)+
# geom_abline(intercept = model[["coefficients"]]['(Intercept)',1],
#             slope =  model[["coefficients"]]['numOfSwitch',1] )+
geom_abline(data= data_corr,aes(intercept = intercept,slope =  slope, color=sub))+
xlab("# of swtiches")+
ylab("# of blinks")
config = list()
config$ylim = round(seq(0,120,20),4)
config$ylim_stride = 5
config$xlim = round(seq(0,30,10),2)
config$xlim_stride = 2
p = setEmptyStyle(p,config)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
###########################################################################3
data_tmp = aggregate( data_y ~ sub*age, data = data_blink_sum, FUN = "mean")
x = as.numeric(data_tmp$age)
y = data_tmp$data_y
f <- y ~  a*x + b
obj1 <- nls(f, start = c(a = 0, b = 0))
df <- data.frame(x = seq(0, 50, length = 50))
data_curve = data.frame(
x = df$x,
yy = predict(obj1, df)
)
print(summary(obj1))
r_blink_switch = cor.test(x,y)
config$ylim = round(seq(0,120,20),4)
config$ylim_stride = 5
config$xlim = round(seq(25,50,5),2)
config$xlim_stride = 2
p = ggplot(data_tmp,aes(x=age, y=data_y, color=sub))+
geom_point(size=5,alpha=0.8)+
geom_line(data = data_curve,aes(x=x,y=yy),color='gray')+
xlab("age")+
ylab("averaged # of blinks across session")+
scale_x_continuous(breaks=config$xlim)
p = setEmptyStyle(p,config)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
###########################################################################
data_tmp = aggregate( numOfSwitch ~ sub*age, data = data_blink_sum, FUN = "mean")
x = as.numeric(data_tmp$age)
y = data_tmp$V1
f <- y ~  a*x + b
obj1 <- nls(f, start = c(a = 0, b = 0))
df <- data.frame(x = seq(0, 50, length = 50))
data_curve = data.frame(
x = df$x,
yy = predict(obj1, df)
)
print(summary(obj1))
r_age_switch = cor.test(x,y)
config$ylim = round(seq(5,25,5),4)
config$ylim_stride = 2
p = ggplot(data_tmp,aes(x=age, y=V1, color=sub))+
geom_point(size=5,alpha=0.8)+
geom_line(data = data_curve,aes(x=x,y=yy),color='gray')+
xlab("age")+
ylab("averaged # of switches across session")+
scale_x_continuous(breaks=config$xlim)
p = setEmptyStyle(p,config)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
p=ggplot(data_blink_sum,aes(numOfSwitch,pupil,color=sub))+
geom_point(aes(shape=Session),size=4)
p
