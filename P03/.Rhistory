# ind_data = ind_data[ind_data$data_x > 1,]
data_e1 = aggregate( data_y ~ sub*Color*Pattern*data_x, data = ind_data, FUN = "mean")
dat_mean = unlist(tapply(data_e1$data_y,list(data_e1$sub,data_e1$Color,data_e1$Pattern),min))
dat_mean = matrix(dat_mean,ncol = 1)
save(data_e1,file = "dataset_e1.rda")
load("dataset_e2.rda")
# exclude the participants rejected in pupillometry(exp1)
data_e2 <- subset(data_e2, sub != 7 & sub != 8 & sub != 13)
data_e2 <- data_e2[data_e2$Pattern == "Glare",]
load("dataset_e1.rda")
data_e1 = aggregate( data_y ~ sub*Color*Pattern, data = data_e1, FUN = "mean")
# exclude the participants who had a noisy pupil data or didn"t participante in exp2"
data_e1 <- subset(data_e1, sub != 7 & sub != 13 & sub < 18)
data_e1 <- data_e1[data_e1$Pattern == "Glare",]
data_e2$PLR <- data_e1$data_y
subName = NULL
for( i in seq( length(unique(data_e2$sub))) ){
subName = rbind(subName,paste("s", i, sep = ""))
}
data_e2$sub = rep(subName, numOfcondition/2)
config = list(lim_x = c(-20, 40),
lim_y = c(-1, 0.7),
stride = c(-0.4,-0.0,0.4),
alpha_val = 0.7,
label_x = "Adjusted luminance score [%]",
label_y = "Pupil Changes [mm]",
grCol= c("Black","Blue","Cyan","Green","Magenta","Red","Yellow"))
data_e2_ave = aggregate(data_e2, by=list(Color=data_e2$Color,Pattern=data_e2$Pattern), FUN = "mean")
p_val = NULL
indCoff_y = NULL
for( i in 1:numOfcondition ){
tmpData = data_e2[data_e2$sub == subName[i],]
lm = lm(PLR ~ data_afy, data = tmpData)
newavg <- data.frame(data_afy = config$lim_x[1]:config$lim_x[2])
newavg$reaction <- predict(lm, re.form = NA, newavg)
indCoff_y = cbind(indCoff_y,newavg$reaction)
p_val =  cbind(round(summary(lm)$coefficients[2,"Pr(>|t|)"], digits = 4))
}
indCoff <- data.frame(
y = matrix(indCoff_y,ncol = 1),
x = newavg$data_afy,
sub = rep(subName,times=rep( dim(newavg)[1], numOfcondition))
)
lm = lmer(PLR ~ data_afy + (1+data_afy|sub), data = data_e2)
print(paste("y = ", round(summary(lm)$coefficients[2,"Estimate"], digits = 4),
"x + ", round(summary(lm)$coefficients[1,"Estimate"], digits = 4),
", t = ", round(summary(lm)$coefficients[2,"t value"], digits = 4),
", p = ", round(summary(lm)$coefficients[2,"Pr(>|t|)"], digits = 4),
", R = ", round(cor(data_e2$data_afy,data_e2$PLR), digits = 4), sep=""))
# Data frame to evaluate average effects predictions on
newavg <- data.frame(data_afy = (config$lim_x[1]-20):(config$lim_x[2]+20))
newavg$reaction <- predict(lm, re.form = NA, newavg)
p <- ggplot() +
geom_line(data = newavg,aes(x = data_afy, y=reaction), col = "black", size = 1) +
geom_point(data = data_e2, alpha = config$alpha_val,
aes(x = data_afy, y = PLR, colour = Color, fill = Color), size = 2) +
scale_color_manual(values = config$gr) +
xlim(config$lim_x) +
xlab(config$label_x) +
ylab(config$label_y)
p <- setFigureStyle(p)
p <- p + theme(
# legend.position = 'none',
axis.line.x = element_blank(),
axis.line.y = element_blank()
)
## figure output -----------------------------------------------------------
print(p)
source('~/Desktop/dbox/R/Rscript_working/P03_glare_pupil/exp2/showFig4_exp2.R')
sTime = -0.2
eTime = 4
countFigNum = 1
#### file loading
load("dataset_e1.rda")
numOfSub = length(unique(data_e1$sub))
subName = NULL
for( i in seq(max(data_e1$sub))){ subName = rbind(subName,paste("s", i, sep = ""))}
data_e1$sub = subName[data_e1$sub]
### show graph
data_e1_ave = aggregate( data_y ~ Color*Pattern*data_x, data = data_e1, FUN = "mean")
config <- list(lim_x = c(sTime, eTime),
lim_y = c(min(data_e1_ave$data_y), max(data_e1_ave$data_y)),
alpha = 0.1,
stride = 0.1,
label_x = "Time [sec]",
label_y = "Pupil Changes [mm]",
title = "pupil",
grCol = rep(c("Black","Blue","Cyan","Green","Yellow","Red","Magenta"),2)
)
p <- disp(data_e1_ave,config,0,c("Color","Color"))
p <- p + facet_grid(. ~ Pattern)
p = setFigureStyle(p)
p <- p + theme(
legend.position = 'none'
)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
## mean during time from 0sec to 4sec
data_e1_anova = aggregate( data_y ~ sub*Color*Pattern, data = data_e1, FUN = "mean")
#### ANOVA
anovakun(data_e1_anova,"sAB",gg=T,long=T, peta=T)
# output2wayANOVA(forDrawingSigANOVA)
# sigPair = makeSigPair(forDrawingPost)
## mean during time from 0sec to 4sec
data_e1_plot = aggregate( data_y ~ Color*Pattern, data = data_e1_anova, FUN = "mean")
std_data = aggregate(data_y ~ Color*Pattern, data=data_e1_anova, FUN = "sd")
std_data$data_y <- std_data$data_y / sqrt(numOfSub)
std_data$SE_min <- data_e1_plot$data_y - std_data$data_y
std_data$SE_max <- data_e1_plot$data_y + std_data$data_y
### bar plot
config <- list(lim_x = c(0.5,7.5),
lim_y = c(min(std_data$SE_min), max(std_data$SE_max)),
stride =c(-0.3,-0.2,-0.1,-0.0,0.1,0.2),
label_x = "Condition",
label_y = "Averaged Pupil Changes [mm]",
title="average",
gr = c("Black","Blue","Cyan","Green","Yellow","Red","Magenta",
"#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF"),
gr_outline = rep(c("Black","Blue","Cyan","Green","Yellow","Red","Magenta"),times=rep(2,7))
)
p <- ggplot(data_e1_plot, aes(x = Color, y = data_y, fill = interaction(Color,Pattern)))+
geom_bar(stat = "identity", position = "dodge", colour = config$gr_outline)+
# scale_fill_manual(values = c("blue","white")) +
scale_fill_manual(values = config$gr) +
geom_errorbar(data = std_data, aes(ymin = SE_min, ymax = SE_max),
width = 0.3, size=0.2, position = position_dodge(.9) ) +
geom_hline(yintercept=0, colour="black", linetype="solid", size = 0.5) +
# ylim(config$lim_y) +
xlab(config$label_x) + ylab(config$label_y)
# p <- drawSignificance(p,sigPair,0.12,0.015)
p = setBarFigureStyle(p)
p <- p + theme(
legend.position = 'none',
axis.ticks.x = element_blank(),
axis.text.x = element_text(angle = 30, hjust = 1),
axis.line.x = element_blank()
)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
# figure output -----------------------------------------------------------
p = ggarrange(p1, p2,
labels = c("(a)", "(b)"),
ncol = 2, nrow = 1)
plot(p)
p
sTime = -0.2
eTime = 4
gColor = rep(c("Black","Blue","Cyan","Green","Yellow","Red","Magenta"),2)
gPattern = c("Glare","Halo")
# #### making dataset for e1 #################################
dat <- readMat("./data/data_1220.mat")
numOfTrial = dim(dat$y)[1]
numOfSub = length(unique(dat$sub))
lengthOfTime = dim(dat$y)[2]
x = seq(sTime,eTime,length=lengthOfTime)
sh = rep(c(1,2),times=c(7,7))
ind_data <- data.frame(
sub =  rep( dat$sub, times = rep( lengthOfTime, numOfTrial)),
data_y = t(matrix(t(dat$y),nrow=1)),
data_x = rep( x, numOfTrial),
Color = rep( dat$condition, times = rep(lengthOfTime, numOfTrial)),
Pattern = rep( sh[dat$condition], times = rep(lengthOfTime, numOfTrial))
)
ind_data$Color = gColor[ind_data$Color]
ind_data$Color <- factor(ind_data$Color, levels = c("Black","Blue","Cyan","Green","Yellow","Red","Magenta"))
ind_data$Pattern = gPattern[ind_data$Pattern]
# ind_data = ind_data[ind_data$data_x > 1,]
data_e1 = aggregate( data_y ~ sub*Color*Pattern*data_x, data = ind_data, FUN = "mean")
dat_mean = unlist(tapply(data_e1$data_y,list(data_e1$sub,data_e1$Color,data_e1$Pattern),min))
dat_mean = matrix(dat_mean,ncol = 1)
save(data_e1,file = "dataset_e1.rda")
getwd()
load("dataset_e2.rda")
# exclude the participants rejected in pupillometry(exp1)
data_e2 <- subset(data_e2, sub != 7 & sub != 8 & sub != 13)
data_e2 <- data_e2[data_e2$Pattern == "Glare",]
load("dataset_e1.rda")
data_e1 = aggregate( data_y ~ sub*Color*Pattern, data = data_e1, FUN = "mean")
# exclude the participants who had a noisy pupil data or didn"t participante in exp2"
data_e1 <- subset(data_e1, sub != 7 & sub != 13 & sub < 18)
data_e1 <- data_e1[data_e1$Pattern == "Glare",]
data_e2$PLR <- data_e1$data_y
subName = NULL
for( i in seq( length(unique(data_e2$sub))) ){
subName = rbind(subName,paste("s", i, sep = ""))
}
data_e2$sub = rep(subName, numOfcondition/2)
config = list(lim_x = c(-20, 40),
lim_y = c(-1, 0.7),
stride = c(-0.4,-0.0,0.4),
alpha_val = 0.7,
label_x = "Adjusted luminance score [%]",
label_y = "Pupil Changes [mm]",
grCol= c("Black","Blue","Cyan","Green","Magenta","Red","Yellow"))
data_e2_ave = aggregate(data_e2, by=list(Color=data_e2$Color,Pattern=data_e2$Pattern), FUN = "mean")
p_val = NULL
indCoff_y = NULL
for( i in 1:numOfcondition ){
tmpData = data_e2[data_e2$sub == subName[i],]
lm = lm(PLR ~ data_afy, data = tmpData)
newavg <- data.frame(data_afy = config$lim_x[1]:config$lim_x[2])
newavg$reaction <- predict(lm, re.form = NA, newavg)
indCoff_y = cbind(indCoff_y,newavg$reaction)
p_val =  cbind(round(summary(lm)$coefficients[2,"Pr(>|t|)"], digits = 4))
}
indCoff <- data.frame(
y = matrix(indCoff_y,ncol = 1),
x = newavg$data_afy,
sub = rep(subName,times=rep( dim(newavg)[1], numOfcondition))
)
lm = lmer(PLR ~ data_afy + (1+data_afy|sub), data = data_e2)
print(paste("y = ", round(summary(lm)$coefficients[2,"Estimate"], digits = 4),
"x + ", round(summary(lm)$coefficients[1,"Estimate"], digits = 4),
", t = ", round(summary(lm)$coefficients[2,"t value"], digits = 4),
", p = ", round(summary(lm)$coefficients[2,"Pr(>|t|)"], digits = 4),
", R = ", round(cor(data_e2$data_afy,data_e2$PLR), digits = 4), sep=""))
# Data frame to evaluate average effects predictions on
newavg <- data.frame(data_afy = (config$lim_x[1]-20):(config$lim_x[2]+20))
newavg$reaction <- predict(lm, re.form = NA, newavg)
p <- ggplot() +
geom_line(data = newavg,aes(x = data_afy, y=reaction), col = "black", size = 1) +
geom_point(data = data_e2, alpha = config$alpha_val,
aes(x = data_afy, y = PLR, colour = Color, fill = Color), size = 2) +
scale_color_manual(values = config$gr) +
xlim(config$lim_x) +
xlab(config$label_x) +
ylab(config$label_y)
p <- setFigureStyle(p)
p <- p + theme(
# legend.position = 'none',
axis.line.x = element_blank(),
axis.line.y = element_blank()
)
## figure output -----------------------------------------------------------
print(p)
sTime = -0.2
eTime = 4
gColor = rep(c("Black","Blue","Cyan","Green","Yellow","Red","Magenta"),2)
gPattern = c("Glare","Halo")
# #### making dataset for e1 #################################
dat <- readMat("./data/data1.mat")
numOfTrial = dim(dat$y)[1]
numOfSub = length(unique(dat$sub))
lengthOfTime = dim(dat$y)[2]
x = seq(sTime,eTime,length=lengthOfTime)
sh = rep(c(1,2),times=c(7,7))
ind_data <- data.frame(
sub =  rep( dat$sub, times = rep( lengthOfTime, numOfTrial)),
data_y = t(matrix(t(dat$y),nrow=1)),
data_x = rep( x, numOfTrial),
Color = rep( dat$condition, times = rep(lengthOfTime, numOfTrial)),
Pattern = rep( sh[dat$condition], times = rep(lengthOfTime, numOfTrial))
)
ind_data$Color = gColor[ind_data$Color]
ind_data$Color <- factor(ind_data$Color, levels = c("Black","Blue","Cyan","Green","Yellow","Red","Magenta"))
ind_data$Pattern = gPattern[ind_data$Pattern]
# ind_data = ind_data[ind_data$data_x > 1,]
data_e1 = aggregate( data_y ~ sub*Color*Pattern*data_x, data = ind_data, FUN = "mean")
dat_mean = unlist(tapply(data_e1$data_y,list(data_e1$sub,data_e1$Color,data_e1$Pattern),min))
dat_mean = matrix(dat_mean,ncol = 1)
save(data_e1,file = "dataset_e1.rda")
load("dataset_e2.rda")
# exclude the participants rejected in pupillometry(exp1)
data_e2 <- subset(data_e2, sub != 7 & sub != 8 & sub != 13)
data_e2 <- data_e2[data_e2$Pattern == "Glare",]
load("dataset_e1.rda")
data_e1 = aggregate( data_y ~ sub*Color*Pattern, data = data_e1, FUN = "mean")
# exclude the participants who had a noisy pupil data or didn"t participante in exp2"
data_e1 <- subset(data_e1, sub != 7 & sub != 13 & sub < 18)
data_e1 <- data_e1[data_e1$Pattern == "Glare",]
data_e2$PLR <- data_e1$data_y
subName = NULL
for( i in seq( length(unique(data_e2$sub))) ){
subName = rbind(subName,paste("s", i, sep = ""))
}
data_e2$sub = rep(subName, numOfcondition/2)
config = list(lim_x = c(-20, 40),
lim_y = c(-1, 0.7),
stride = c(-0.4,-0.0,0.4),
alpha_val = 0.7,
label_x = "Adjusted luminance score [%]",
label_y = "Pupil Changes [mm]",
grCol= c("Black","Blue","Cyan","Green","Magenta","Red","Yellow"))
data_e2_ave = aggregate(data_e2, by=list(Color=data_e2$Color,Pattern=data_e2$Pattern), FUN = "mean")
p_val = NULL
indCoff_y = NULL
for( i in 1:numOfcondition ){
tmpData = data_e2[data_e2$sub == subName[i],]
lm = lm(PLR ~ data_afy, data = tmpData)
newavg <- data.frame(data_afy = config$lim_x[1]:config$lim_x[2])
newavg$reaction <- predict(lm, re.form = NA, newavg)
indCoff_y = cbind(indCoff_y,newavg$reaction)
p_val =  cbind(round(summary(lm)$coefficients[2,"Pr(>|t|)"], digits = 4))
}
indCoff <- data.frame(
y = matrix(indCoff_y,ncol = 1),
x = newavg$data_afy,
sub = rep(subName,times=rep( dim(newavg)[1], numOfcondition))
)
lm = lmer(PLR ~ data_afy + (1+data_afy|sub), data = data_e2)
print(paste("y = ", round(summary(lm)$coefficients[2,"Estimate"], digits = 4),
"x + ", round(summary(lm)$coefficients[1,"Estimate"], digits = 4),
", t = ", round(summary(lm)$coefficients[2,"t value"], digits = 4),
", p = ", round(summary(lm)$coefficients[2,"Pr(>|t|)"], digits = 4),
", R = ", round(cor(data_e2$data_afy,data_e2$PLR), digits = 4), sep=""))
# Data frame to evaluate average effects predictions on
newavg <- data.frame(data_afy = (config$lim_x[1]-20):(config$lim_x[2]+20))
newavg$reaction <- predict(lm, re.form = NA, newavg)
p <- ggplot() +
geom_line(data = newavg,aes(x = data_afy, y=reaction), col = "black", size = 1) +
geom_point(data = data_e2, alpha = config$alpha_val,
aes(x = data_afy, y = PLR, colour = Color, fill = Color), size = 2) +
scale_color_manual(values = config$gr) +
xlim(config$lim_x) +
xlab(config$label_x) +
ylab(config$label_y)
p <- setFigureStyle(p)
p <- p + theme(
# legend.position = 'none',
axis.line.x = element_blank(),
axis.line.y = element_blank()
)
## figure output -----------------------------------------------------------
print(p)
p
sTime = -0.2
eTime = 4
countFigNum = 1
#### file loading
load("dataset_e1.rda")
numOfSub = length(unique(data_e1$sub))
subName = NULL
for( i in seq(max(data_e1$sub))){ subName = rbind(subName,paste("s", i, sep = ""))}
data_e1$sub = subName[data_e1$sub]
### show graph
data_e1_ave = aggregate( data_y ~ Color*Pattern*data_x, data = data_e1, FUN = "mean")
config <- list(lim_x = c(sTime, eTime),
lim_y = c(min(data_e1_ave$data_y), max(data_e1_ave$data_y)),
alpha = 0.1,
stride = 0.1,
label_x = "Time [sec]",
label_y = "Pupil Changes [mm]",
title = "pupil",
grCol = rep(c("Black","Blue","Cyan","Green","Yellow","Red","Magenta"),2)
)
p <- disp(data_e1_ave,config,0,c("Color","Color"))
p <- p + facet_grid(. ~ Pattern)
p = setFigureStyle(p)
p <- p + theme(
legend.position = 'none'
)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
## mean during time from 0sec to 4sec
data_e1_anova = aggregate( data_y ~ sub*Color*Pattern, data = data_e1, FUN = "mean")
#### ANOVA
anovakun(data_e1_anova,"sAB",gg=T,long=T, peta=T)
# output2wayANOVA(forDrawingSigANOVA)
# sigPair = makeSigPair(forDrawingPost)
## mean during time from 0sec to 4sec
data_e1_plot = aggregate( data_y ~ Color*Pattern, data = data_e1_anova, FUN = "mean")
std_data = aggregate(data_y ~ Color*Pattern, data=data_e1_anova, FUN = "sd")
std_data$data_y <- std_data$data_y / sqrt(numOfSub)
std_data$SE_min <- data_e1_plot$data_y - std_data$data_y
std_data$SE_max <- data_e1_plot$data_y + std_data$data_y
### bar plot
config <- list(lim_x = c(0.5,7.5),
lim_y = c(min(std_data$SE_min), max(std_data$SE_max)),
stride =c(-0.3,-0.2,-0.1,-0.0,0.1,0.2),
label_x = "Condition",
label_y = "Averaged Pupil Changes [mm]",
title="average",
gr = c("Black","Blue","Cyan","Green","Yellow","Red","Magenta",
"#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF"),
gr_outline = rep(c("Black","Blue","Cyan","Green","Yellow","Red","Magenta"),times=rep(2,7))
)
p <- ggplot(data_e1_plot, aes(x = Color, y = data_y, fill = interaction(Color,Pattern)))+
geom_bar(stat = "identity", position = "dodge", colour = config$gr_outline)+
# scale_fill_manual(values = c("blue","white")) +
scale_fill_manual(values = config$gr) +
geom_errorbar(data = std_data, aes(ymin = SE_min, ymax = SE_max),
width = 0.3, size=0.2, position = position_dodge(.9) ) +
geom_hline(yintercept=0, colour="black", linetype="solid", size = 0.5) +
# ylim(config$lim_y) +
xlab(config$label_x) + ylab(config$label_y)
# p <- drawSignificance(p,sigPair,0.12,0.015)
p = setBarFigureStyle(p)
p <- p + theme(
legend.position = 'none',
axis.ticks.x = element_blank(),
axis.text.x = element_text(angle = 30, hjust = 1),
axis.line.x = element_blank()
)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
# figure output -----------------------------------------------------------
p = ggarrange(p1, p2,
labels = c("(a)", "(b)"),
ncol = 2, nrow = 1)
plot(p)
plot(p)
sTime = -0.2
eTime = 4
countFigNum = 1
#### file loading
load("dataset_e1.rda")
numOfSub = length(unique(data_e1$sub))
subName = NULL
for( i in seq(max(data_e1$sub))){ subName = rbind(subName,paste("s", i, sep = ""))}
data_e1$sub = subName[data_e1$sub]
### show graph
data_e1_ave = aggregate( data_y ~ Color*Pattern*data_x, data = data_e1, FUN = "mean")
config <- list(lim_x = c(sTime, eTime),
lim_y = c(min(data_e1_ave$data_y), max(data_e1_ave$data_y)),
alpha = 0.1,
stride = 0.1,
label_x = "Time [sec]",
label_y = "Pupil Changes [mm]",
title = "pupil",
grCol = rep(c("Black","Blue","Cyan","Green","Yellow","Red","Magenta"),2)
)
p <- disp(data_e1_ave,config,0,c("Color","Color"))
p <- p + facet_grid(. ~ Pattern)
p = setFigureStyle(p)
p <- p + theme(
legend.position = 'none'
)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
## mean during time from 0sec to 4sec
data_e1_anova = aggregate( data_y ~ sub*Color*Pattern, data = data_e1, FUN = "mean")
#### ANOVA
anovakun(data_e1_anova,"sAB",gg=T,long=T, peta=T)
# output2wayANOVA(forDrawingSigANOVA)
# sigPair = makeSigPair(forDrawingPost)
## mean during time from 0sec to 4sec
data_e1_plot = aggregate( data_y ~ Color*Pattern, data = data_e1_anova, FUN = "mean")
std_data = aggregate(data_y ~ Color*Pattern, data=data_e1_anova, FUN = "sd")
std_data$data_y <- std_data$data_y / sqrt(numOfSub)
std_data$SE_min <- data_e1_plot$data_y - std_data$data_y
std_data$SE_max <- data_e1_plot$data_y + std_data$data_y
### bar plot
config <- list(lim_x = c(0.5,7.5),
lim_y = c(min(std_data$SE_min), max(std_data$SE_max)),
stride =c(-0.3,-0.2,-0.1,-0.0,0.1,0.2),
label_x = "Condition",
label_y = "Averaged Pupil Changes [mm]",
title="average",
gr = c("Black","Blue","Cyan","Green","Yellow","Red","Magenta",
"#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF"),
gr_outline = rep(c("Black","Blue","Cyan","Green","Yellow","Red","Magenta"),times=rep(2,7))
)
p <- ggplot(data_e1_plot, aes(x = Color, y = data_y, fill = interaction(Color,Pattern)))+
geom_bar(stat = "identity", position = "dodge", colour = config$gr_outline)+
# scale_fill_manual(values = c("blue","white")) +
scale_fill_manual(values = config$gr) +
geom_errorbar(data = std_data, aes(ymin = SE_min, ymax = SE_max),
width = 0.3, size=0.2, position = position_dodge(.9) ) +
geom_hline(yintercept=0, colour="black", linetype="solid", size = 0.5) +
# ylim(config$lim_y) +
xlab(config$label_x) + ylab(config$label_y)
# p <- drawSignificance(p,sigPair,0.12,0.015)
p = setBarFigureStyle(p)
p <- p + theme(
legend.position = 'none',
axis.ticks.x = element_blank(),
axis.text.x = element_text(angle = 30, hjust = 1),
axis.line.x = element_blank()
)
eval(parse(text=paste("p", countFigNum ,"=p", sep="")))
countFigNum = countFigNum+1
# figure output -----------------------------------------------------------
p = ggarrange(p1, p2,
labels = c("(a)", "(b)"),
ncol = 2, nrow = 1)
plot(p)
source('~/Desktop/dbox/R/Rscript_working/P03_glare_pupil/exp1/showFig3_exp1_min.R')
source('~/Desktop/dbox/R/Rscript_working/P03_glare_pupil/exp1/showFig3_exp1_min.R')
source('~/Desktop/dbox/R/Rscript_working/P03_glare_pupil/exp1/showFig3_exp1_min.R')
p1
source('~/Desktop/dbox/R/Rscript_working/P03_glare_pupil/exp1/showFig3_exp1_min.R')
source('~/Desktop/dbox/R/Rscript_working/P03_glare_pupil/exp1/showFig3_exp1_min.R')
currentLoc = strsplit(currentLoc , "exp1")
load(paste(currentLoc,"/dataset_e1_min.rda", sep = ""))
currentLoc
paste(currentLoc,"/dataset_e1_min.rda", sep = "")
load(paste(currentLoc,"dataset_e1_min.rda", sep = ""))
source('~/Desktop/dbox/R/Rscript_working/P03_glare_pupil/exp1/showFig3_exp1_min.R')
numOfSub = length(unique(data_e1$sub))
data_e1$sub = subName[data_e1$sub]
data_e1 = data_e1[data_e1$data_x > 0,]
data_e1 = data_e1[data_e1$sub != 's23',]
source('~/Desktop/dbox/R/Rscript_working/Pxx_LocsGlare/makeDataset.R')
data=fromJSON(file="/Users/yuta/Google Drive/Python/Pxx_LocsGlare/data_original.json")
source('~/Desktop/dbox/R/Rscript_working/Pxx_LocsGlare/makeDataset.R')
source('~/Desktop/dbox/R/Rscript_working/Pxx_LocsGlare/makeDataset.R')
source('~/Desktop/dbox/R/Rscript_working/Pxx_LocsGlare/makeDataset.R')
source('~/Desktop/dbox/R/Rscript_working/Pxx_LocsGlare/makeDataset.R')
View(data)
data=fromJSON(file="/Users/yuta/Google Drive/Python/Pxx_LocsGlare/data.json")
dat <- list((matrix(unlist(data$PDR),nrow=length(data$PDR),byrow=T)),
t(unlist(data$Sub)),
t(unlist(data$Condition)))
data=fromJSON(file="/Users/yuta/Google Drive/Python/Pxx_LocsGlare/data.json")
dat <- list((matrix(unlist(data$PDR),nrow=length(data$PDR),byrow=T)),
t(unlist(data$sub)),
t(unlist(data$condition)))
names(dat) <- c('y', 'sub', 'condition')
source('~/Desktop/dbox/R/Rscript_working/Pxx_LocsGlare/makeDataset.R')
source('~/Desktop/dbox/R/Rscript_working/Pxx_LocsGlare/makeDataset.R')
source('~/Desktop/dbox/R/Rscript_working/Pxx_LocsGlare/showFig_e3.R')
source('~/Desktop/dbox/R/Rscript_working/Pxx_LocsGlare/showFig_e3.R')
